% $ biblatex auxiliary file $
% $ biblatex bbl format version 3.2 $
% Do not modify the above lines!
%
% This is an auxiliary file used by the 'biblatex' package.
% This file may safely be deleted. It will be recreated by
% biber as required.
%
\begingroup
\makeatletter
\@ifundefined{ver@biblatex.sty}
  {\@latex@error
     {Missing 'biblatex' package}
     {The bibliography requires the 'biblatex' package.}
      \aftergroup\endinput}
  {}
\endgroup


\refsection{0}
  \datalist[entry]{nty/global//global/global}
    \entry{bayer_organization_1972}{article}{}
      \name{author}{2}{}{%
        {{hash=676e6bcdc9c3ea833a95445bfd73b035}{%
           family={Bayer},
           familyi={B\bibinitperiod},
           given={R.},
           giveni={R\bibinitperiod}}}%
        {{hash=645231aeda0bf9198cbd2dabbc4c5a1f}{%
           family={{McCreight}},
           familyi={M\bibinitperiod},
           given={E.\bibnamedelimi M.},
           giveni={E\bibinitperiod\bibinitdelim M\bibinitperiod}}}%
      }
      \strng{namehash}{30a1729e8202a37176aab6a6eb76ff5a}
      \strng{fullhash}{30a1729e8202a37176aab6a6eb76ff5a}
      \strng{bibnamehash}{30a1729e8202a37176aab6a6eb76ff5a}
      \strng{authorbibnamehash}{30a1729e8202a37176aab6a6eb76ff5a}
      \strng{authornamehash}{30a1729e8202a37176aab6a6eb76ff5a}
      \strng{authorfullhash}{30a1729e8202a37176aab6a6eb76ff5a}
      \field{sortinit}{B}
      \field{sortinithash}{d7095fff47cda75ca2589920aae98399}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{{SummaryOrganization} and maintenance of an index for a dynamic random access file is considered. It is assumed that the index must be kept on some pseudo random access backup store like a disc or a drum. The index organization described allows retrieval, insertion, and deletion of keys in time proportional to {logkI} where I is the size of the index and k is a device dependent natural number such that the performance of the scheme becomes near optimal. Storage utilization is at least 50\% but generally much higher. The pages of the index are organized in a special datastructure, so-called B-trees. The scheme is analyzed, performance bounds are obtained, and a near optimal k is computed. Experiments have been performed with indexes up to 100000 keys. An index of size 15000 (100000) can be maintained with an average of 9 (at least 4) transactions per second on an {IBM} 360/44 with a 2311 disc.}
      \field{issn}{0001-5903, 1432-0525}
      \field{journaltitle}{Acta Informatica}
      \field{langid}{english}
      \field{number}{3}
      \field{shortjournal}{Acta Informatica}
      \field{title}{Organization and maintenance of large ordered indexes}
      \field{urlday}{17}
      \field{urlmonth}{10}
      \field{urlyear}{2024}
      \field{volume}{1}
      \field{year}{1972}
      \field{dateera}{ce}
      \field{urldateera}{ce}
      \true{nocite}
      \field{pages}{173\bibrangedash 189}
      \range{pages}{17}
      \verb{doi}
      \verb 10.1007/BF00288683
      \endverb
      \verb{urlraw}
      \verb http://link.springer.com/10.1007/BF00288683
      \endverb
      \verb{url}
      \verb http://link.springer.com/10.1007/BF00288683
      \endverb
    \endentry
    \entry{brass_advanced_2008}{book}{}
      \name{author}{1}{}{%
        {{hash=e97c77d50b87f3f6d931690fdd64f7a1}{%
           family={Brass},
           familyi={B\bibinitperiod},
           given={Peter},
           giveni={P\bibinitperiod}}}%
      }
      \list{publisher}{1}{%
        {Cambridge University Press}%
      }
      \strng{namehash}{e97c77d50b87f3f6d931690fdd64f7a1}
      \strng{fullhash}{e97c77d50b87f3f6d931690fdd64f7a1}
      \strng{bibnamehash}{e97c77d50b87f3f6d931690fdd64f7a1}
      \strng{authorbibnamehash}{e97c77d50b87f3f6d931690fdd64f7a1}
      \strng{authornamehash}{e97c77d50b87f3f6d931690fdd64f7a1}
      \strng{authorfullhash}{e97c77d50b87f3f6d931690fdd64f7a1}
      \field{sortinit}{B}
      \field{sortinithash}{d7095fff47cda75ca2589920aae98399}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{Advanced Data Structures presents a comprehensive look at the ideas, analysis, and implementation details of data structures as a specialized topic in applied algorithms. Data structures are how data is stored within a computer, and how one can go about searching for data within. This text examines efficient ways to search and update sets of numbers, intervals, or strings by various data structures, such as search trees, structures for sets of intervals or piece-wise constant functions, orthogonal range search structures, heaps, union-find structures, dynamization and persistence of structures, structures for strings, and hash tables. This is the first volume to show data structures as a crucial algorithmic topic, rather than relegating them as trivial material used to illustrate object-oriented programming methodology, filling a void in the ever-increasing computer science market. Numerous code examples in C and more than 500 references make Advanced Data Structures an indispensable text. topic. Numerous code examples in C and more than 500 references make Advanced Data Structures an indispensable text.}
      \field{day}{8}
      \field{isbn}{978-0-521-88037-4}
      \field{langid}{english}
      \field{month}{9}
      \field{note}{Google-Books-{ID}: g8rZoSKLbhwC}
      \field{pagetotal}{456}
      \field{title}{Advanced Data Structures}
      \field{year}{2008}
      \field{dateera}{ce}
      \true{nocite}
      \keyw{Computers / General,Computers / Programming / Algorithms,Computers / Programming / General}
    \endentry
    \entry{cormen_introduction_2001}{book}{}
      \name{author}{4}{}{%
        {{hash=835b8c52757d98c15859b416316d9820}{%
           family={Cormen},
           familyi={C\bibinitperiod},
           given={Thomas\bibnamedelima H.},
           giveni={T\bibinitperiod\bibinitdelim H\bibinitperiod}}}%
        {{hash=a389dea91a76366c4b4af5f52a928a76}{%
           family={Leiserson},
           familyi={L\bibinitperiod},
           given={Charles\bibnamedelima E.},
           giveni={C\bibinitperiod\bibinitdelim E\bibinitperiod}}}%
        {{hash=3a964821f97ee17f8bb285bc61c52899}{%
           family={Rivest},
           familyi={R\bibinitperiod},
           given={Ronald\bibnamedelima L.},
           giveni={R\bibinitperiod\bibinitdelim L\bibinitperiod}}}%
        {{hash=bc78426660400760f77758aec45e71a8}{%
           family={Stein},
           familyi={S\bibinitperiod},
           given={Clifford},
           giveni={C\bibinitperiod}}}%
      }
      \list{publisher}{1}{%
        {{MIT} Press}%
      }
      \strng{namehash}{c251cdfd036d9474565c517e73c19c5d}
      \strng{fullhash}{10f004e08c7c03d98be0da1231a869ce}
      \strng{bibnamehash}{c251cdfd036d9474565c517e73c19c5d}
      \strng{authorbibnamehash}{c251cdfd036d9474565c517e73c19c5d}
      \strng{authornamehash}{c251cdfd036d9474565c517e73c19c5d}
      \strng{authorfullhash}{10f004e08c7c03d98be0da1231a869ce}
      \field{sortinit}{C}
      \field{sortinithash}{4d103a86280481745c9c897c925753c0}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{This title covers a broad range of algorithms in depth, yet makes their design and analysis accessible to all levels of readers. Each chapter is relatively self-contained and can be used as a unit of study. The algorithms are described in English and in a pseudocode designed to be readable by anyone who has done a little programming. The explanations have been kept elementary without sacrificing depth of coverage or mathematical rigor.}
      \field{isbn}{978-0-262-03293-3}
      \field{langid}{english}
      \field{note}{Google-Books-{ID}: {NLngYyWFl}\_YC}
      \field{pagetotal}{1216}
      \field{title}{Introduction To Algorithms}
      \field{year}{2001}
      \field{dateera}{ce}
      \true{nocite}
      \keyw{Mathematics / Algebra / General,Computers / Programming / Algorithms,Computers / Computer Science}
    \endentry
    \entry{huddleston_new_1982}{article}{}
      \name{author}{2}{}{%
        {{hash=4ae6c17075079b7a62ebb5873a652ffb}{%
           family={Huddleston},
           familyi={H\bibinitperiod},
           given={Scott},
           giveni={S\bibinitperiod}}}%
        {{hash=c2f239e3cf9c48b72ce5f4ca9b5e478e}{%
           family={Mehlhorn},
           familyi={M\bibinitperiod},
           given={Kurt},
           giveni={K\bibinitperiod}}}%
      }
      \strng{namehash}{56476515e31ff32b65a938946d13a7da}
      \strng{fullhash}{56476515e31ff32b65a938946d13a7da}
      \strng{bibnamehash}{56476515e31ff32b65a938946d13a7da}
      \strng{authorbibnamehash}{56476515e31ff32b65a938946d13a7da}
      \strng{authornamehash}{56476515e31ff32b65a938946d13a7da}
      \strng{authorfullhash}{56476515e31ff32b65a938946d13a7da}
      \field{sortinit}{H}
      \field{sortinithash}{23a3aa7c24e56cfa16945d55545109b5}
      \field{labelnamesource}{author}
      \field{labeltitlesource}{title}
      \field{abstract}{In this paper we explore the use of weak B -trees to represent sorted lists. In weak B -trees each node has at least a and at most b sons where 2 a b . We analyse the worst case cost of sequences of insertions and deletions in weak B -trees. This leads to a new data structure (level-linked weak B-trees) for representing sorted lists when the access pattern exhibits a (time-varying) locality of reference. Our structure is substantially simpler than the one proposed in [7], yet it has many of its properties. Our structure is as simple as the one proposed in [5], but our structure can treat arbitrary sequences of insertions and deletions whilst theirs can only treat non-interacting insertions and deletions. We also show that weak B -trees support concurrent operations in an efficient way.}
      \field{day}{1}
      \field{issn}{0001-5903}
      \field{journaltitle}{Acta Inf.}
      \field{month}{6}
      \field{number}{2}
      \field{title}{A new data structure for representing sorted lists}
      \field{urlday}{17}
      \field{urlmonth}{10}
      \field{urlyear}{2024}
      \field{volume}{17}
      \field{year}{1982}
      \field{dateera}{ce}
      \field{urldateera}{ce}
      \true{nocite}
      \field{pages}{157\bibrangedash 184}
      \range{pages}{28}
      \verb{doi}
      \verb 10.1007/BF00288968
      \endverb
      \verb{urlraw}
      \verb https://doi.org/10.1007/BF00288968
      \endverb
      \verb{url}
      \verb https://doi.org/10.1007/BF00288968
      \endverb
    \endentry
  \enddatalist
\endrefsection
\endinput

